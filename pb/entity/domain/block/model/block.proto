syntax = "proto3";
package block;

option go_package = "github.com/blackhorseya/ryze/entity/domain/block/model";

import "google/protobuf/timestamp.proto";

// Represents a block in the blockchain.
message Block {
  // Unique identifier of the block.
  bytes id = 1;

  // Height of the block in the blockchain.
  uint32 height = 2;

  // Timestamp of when the block was created.
  google.protobuf.Timestamp timestamp = 3;

  // List of transaction IDs included in the block.
  repeated bytes transaction_ids = 4;
}

// Request message for retrieving a single block by its ID.
message GetBlockRequest {
  int32 workchain = 1;
  int64 shard = 2;
  uint32 seq_no = 3;
}

// Request message for retrieving a range of blocks by their heights.
message GetBlocksRequest {
  // Starting height of the range of blocks to retrieve.
  uint32 start_height = 1;

  // Ending height of the range of blocks to retrieve.
  uint32 end_height = 2;
}

// Request message for scanning blocks.
message ScanBlockRequest {
  // Starting height of the range of blocks to scan.
  uint32 start_height = 1;

  // Ending height of the range of blocks to scan.
  uint32 end_height = 2;
}

// Service definition for handling blocks.
service BlockService {
  // Retrieves a single block by its ID.
  rpc GetBlock(GetBlockRequest) returns (Block) {}

  // Retrieves a stream of blocks within a specified height range.
  rpc GetBlocks(GetBlocksRequest) returns (stream Block) {}

  // Scans a range of blocks.
  rpc ScanBlock(ScanBlockRequest) returns (stream Block) {}
}
